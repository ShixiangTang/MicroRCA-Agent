[SNAPSHOT]
snapshot_interval_minutes = 10
compress_state = True

[MASKING]
masking = [
          # 完整错误消息与错误代码组合模式 (最高优先级)
          {"regex_pattern":"\"error\":\"failed to get ads: rpc error: code = DeadlineExceeded desc = context deadline exceeded\"", "mask_with": "ERROR_FULL_ADS_TIMEOUT"},
          {"regex_pattern":"\"error\":\"failed to get ads: rpc error: code = Unknown desc = \"", "mask_with": "ERROR_FULL_ADS_UNKNOWN_EMPTY"},
          {"regex_pattern":"\"error\":\"could not retrieve cart: rpc error: code = Canceled desc = context canceled\"", "mask_with": "ERROR_FULL_CART_RETRIEVE_CANCELED"},
          {"regex_pattern":"\"error\":\"could not retrieve cart: rpc error: code = Unavailable desc = transport is closing\"", "mask_with": "ERROR_FULL_CART_RETRIEVE_CLOSING"},
          {"regex_pattern":"\"error\":\"could not retrieve cart: rpc error: code = FailedPrecondition desc = Can't access cart storage", "mask_with": "ERROR_FULL_CART_RETRIEVE_FAILED_PRECONDITION"},
          
          # 完整错误消息与请求路径组合模式 (最高优先级)
          {"regex_pattern":"\"error\":\"failed to get ads: rpc error: code = DeadlineExceeded[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/\"", "mask_with": "ERROR_ADS_TIMEOUT_GET_ROOT"},
          {"regex_pattern":"\"error\":\"failed to get ads: rpc error: code = Unknown[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/\"", "mask_with": "ERROR_ADS_UNKNOWN_GET_ROOT"},
          {"regex_pattern":"\"error\":\"failed to get ads: rpc error: code = DeadlineExceeded[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/product/", "mask_with": "ERROR_ADS_TIMEOUT_GET_PRODUCT"},
          {"regex_pattern":"\"error\":\"failed to get ads: rpc error: code = Unknown[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/product/", "mask_with": "ERROR_ADS_UNKNOWN_GET_PRODUCT"},
          {"regex_pattern":"\"error\":\"could not retrieve cart: rpc error: code = Canceled[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/cart\"", "mask_with": "ERROR_CART_RETRIEVE_CANCELED_GET_CART"},
          {"regex_pattern":"\"error\":\"could not retrieve cart: rpc error: code = Unavailable[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/cart\"", "mask_with": "ERROR_CART_RETRIEVE_UNAVAILABLE_GET_CART"},
          {"regex_pattern":"\"error\":\"could not retrieve cart: rpc error: code = FailedPrecondition[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/cart\"", "mask_with": "ERROR_CART_RETRIEVE_FAILED_PRECONDITION_GET_CART"},
          {"regex_pattern":"\"error\":\"could not retrieve cart: rpc error: code = Canceled[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/\"", "mask_with": "ERROR_CART_RETRIEVE_CANCELED_GET_ROOT"},
          {"regex_pattern":"\"error\":\"could not retrieve cart: rpc error: code = Unavailable[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/\"", "mask_with": "ERROR_CART_RETRIEVE_UNAVAILABLE_GET_ROOT"},
          {"regex_pattern":"\"error\":\"could not retrieve cart:[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/cart\"", "mask_with": "ERROR_CART_RETRIEVE_GET_CART"},
          {"regex_pattern":"\"error\":\"could not retrieve cart:[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/\"", "mask_with": "ERROR_CART_RETRIEVE_GET_ROOT"},
          {"regex_pattern":"\"error\":\"failed to add to cart:[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"POST\",\"http.req.path\":\"/cart\"", "mask_with": "ERROR_CART_ADD_POST_CART"},
          {"regex_pattern":"\"error\":\"failed to get product recommendations:[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/cart\"", "mask_with": "ERROR_RECOMMENDATION_GET_CART"},
          {"regex_pattern":"\"error\":\"failed to get shipping quote:[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/cart\"", "mask_with": "ERROR_SHIPPING_GET_CART"},
          {"regex_pattern":"\"error\":\"failed to get ads:[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/\"", "mask_with": "ERROR_ADS_GET_ROOT"},
          {"regex_pattern":"\"error\":\"failed to get ads:[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/product/[^\"]+\"", "mask_with": "ERROR_ADS_GET_PRODUCT"},
          {"regex_pattern":"\"error\":\"could not retrieve product:[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"GET\",\"http.req.path\":\"/product/[^\"]+\"", "mask_with": "ERROR_PRODUCT_GET_PRODUCT"},
          {"regex_pattern":"\"error\":\"could not retrieve product:[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"POST\",\"http.req.path\":\"/cart\"", "mask_with": "ERROR_PRODUCT_POST_CART"},
          {"regex_pattern":"\"error\":\"failed to complete the order:[^\"]+\",\"http.req.id\":\"[^\"]+\",\"http.req.method\":\"POST\",\"http.req.path\":\"/cart/checkout\"", "mask_with": "ERROR_ORDER_POST_CHECKOUT"},
          
          # 错误类型与错误代码组合模式 (最高优先级)
          {"regex_pattern":"\"error\":\"could not retrieve cart:[^\"]+code = Unavailable[^\"]+\"", "mask_with": "ERROR_CART_RETRIEVE_UNAVAILABLE"},
          {"regex_pattern":"\"error\":\"could not retrieve cart:[^\"]+code = Canceled[^\"]+\"", "mask_with": "ERROR_CART_RETRIEVE_CANCELED"},
          {"regex_pattern":"\"error\":\"could not retrieve cart:[^\"]+code = DeadlineExceeded[^\"]+\"", "mask_with": "ERROR_CART_RETRIEVE_TIMEOUT"},
          {"regex_pattern":"\"error\":\"could not retrieve cart:[^\"]+code = FailedPrecondition[^\"]+\"", "mask_with": "ERROR_CART_RETRIEVE_FAILED_PRECONDITION"},
          {"regex_pattern":"\"error\":\"failed to add to cart:[^\"]+code = Unavailable[^\"]+\"", "mask_with": "ERROR_CART_ADD_UNAVAILABLE"},
          {"regex_pattern":"\"error\":\"failed to add to cart:[^\"]+code = Canceled[^\"]+\"", "mask_with": "ERROR_CART_ADD_CANCELED"},
          {"regex_pattern":"\"error\":\"failed to add to cart:[^\"]+code = DeadlineExceeded[^\"]+\"", "mask_with": "ERROR_CART_ADD_TIMEOUT"},
          {"regex_pattern":"\"error\":\"could not retrieve product:[^\"]+code = Unavailable[^\"]+\"", "mask_with": "ERROR_PRODUCT_RETRIEVE_UNAVAILABLE"},
          {"regex_pattern":"\"error\":\"could not retrieve product:[^\"]+code = Canceled[^\"]+\"", "mask_with": "ERROR_PRODUCT_RETRIEVE_CANCELED"},
          {"regex_pattern":"\"error\":\"failed to get product recommendations:[^\"]+code = Unavailable[^\"]+\"", "mask_with": "ERROR_RECOMMENDATION_UNAVAILABLE"},
          {"regex_pattern":"\"error\":\"failed to get product recommendations:[^\"]+code = Canceled[^\"]+\"", "mask_with": "ERROR_RECOMMENDATION_CANCELED"},
          {"regex_pattern":"\"error\":\"failed to get shipping quote:[^\"]+code = Unavailable[^\"]+\"", "mask_with": "ERROR_SHIPPING_QUOTE_UNAVAILABLE"},
          {"regex_pattern":"\"error\":\"failed to get shipping quote:[^\"]+code = Canceled[^\"]+\"", "mask_with": "ERROR_SHIPPING_QUOTE_CANCELED"},
          {"regex_pattern":"\"error\":\"failed to complete the order:[^\"]+code = Unavailable[^\"]+\"", "mask_with": "ERROR_ORDER_COMPLETE_UNAVAILABLE"},
          {"regex_pattern":"\"error\":\"failed to complete the order:[^\"]+code = Canceled[^\"]+\"", "mask_with": "ERROR_ORDER_COMPLETE_CANCELED"},
          {"regex_pattern":"\"error\":\"failed to get ads:[^\"]+code = Unavailable[^\"]+\"", "mask_with": "ERROR_ADS_GET_UNAVAILABLE"},
          {"regex_pattern":"\"error\":\"failed to get ads:[^\"]+code = DeadlineExceeded[^\"]+\"", "mask_with": "ERROR_ADS_GET_TIMEOUT"},
          {"regex_pattern":"\"error\":\"failed to get ads:[^\"]+code = Unknown[^\"]+\"", "mask_with": "ERROR_ADS_GET_UNKNOWN"},
          {"regex_pattern":"\"error\":\"failed to retrieve ads:[^\"]+code = Unknown[^\"]+\"", "mask_with": "ERROR_ADS_RETRIEVE_UNKNOWN"},
          
          # 错误类型与异常类型组合模式 (最高优先级)
          {"regex_pattern":"\"error\":\"could not retrieve cart:[^\"]+connection refused[^\"]+\"", "mask_with": "ERROR_CART_RETRIEVE_CONNECTION_REFUSED"},
          {"regex_pattern":"\"error\":\"could not retrieve cart:[^\"]+transport is closing[^\"]+\"", "mask_with": "ERROR_CART_RETRIEVE_TRANSPORT_CLOSING"},
          {"regex_pattern":"\"error\":\"could not retrieve cart:[^\"]+context canceled[^\"]+\"", "mask_with": "ERROR_CART_RETRIEVE_CONTEXT_CANCELED"},
          {"regex_pattern":"\"error\":\"failed to add to cart:[^\"]+connection refused[^\"]+\"", "mask_with": "ERROR_CART_ADD_CONNECTION_REFUSED"},
          {"regex_pattern":"\"error\":\"failed to add to cart:[^\"]+transport is closing[^\"]+\"", "mask_with": "ERROR_CART_ADD_TRANSPORT_CLOSING"},
          {"regex_pattern":"\"error\":\"failed to add to cart:[^\"]+context canceled[^\"]+\"", "mask_with": "ERROR_CART_ADD_CONTEXT_CANCELED"},
          
          # 完整错误消息模式匹配 (高优先级)
          {"regex_pattern":"\"error\":\"could not retrieve cart: rpc error: code = Unavailable desc = connection error: desc = \\\\\"transport: Error while dialing dial tcp [^:]+:\\d+: connect: connection refused\\\\\"\"", "mask_with": "ERROR_FULL_CART_RETRIEVE_CONNECTION_REFUSED"},
          {"regex_pattern":"\"error\":\"failed to add to cart: rpc error: code = Unavailable desc = connection error: desc = \\\\\"transport: Error while dialing dial tcp [^:]+:\\d+: connect: connection refused\\\\\"\"", "mask_with": "ERROR_FULL_CART_ADD_CONNECTION_REFUSED"},
          {"regex_pattern":"\"error\":\"could not retrieve product: rpc error: code = Canceled desc = context canceled\"", "mask_with": "ERROR_FULL_PRODUCT_RETRIEVE_CANCELED"},
          {"regex_pattern":"\"error\":\"failed to get shipping quote: rpc error: code = Canceled desc = context canceled\"", "mask_with": "ERROR_FULL_SHIPPING_QUOTE_CANCELED"},
          {"regex_pattern":"\"error\":\"failed to complete the order: rpc error: code = Canceled desc = context canceled\"", "mask_with": "ERROR_FULL_ORDER_COMPLETE_CANCELED"},
          {"regex_pattern":"\"error\":\"failed to get ads: rpc error: code = DeadlineExceeded desc = context deadline exceeded\"", "mask_with": "ERROR_FULL_ADS_GET_DEADLINE_EXCEEDED"},
          
          # 消息类型与路径组合模式 (高优先级)
          {"regex_pattern":"\"message\":\"request error\",\"session\":\"[^\"]+\",\"severity\":\"error\"", "mask_with": "MESSAGE_REQUEST_ERROR_SEVERITY_ERROR"},
          {"regex_pattern":"\"message\":\"failed to retrieve ads\",\"session\":\"[^\"]+\",\"severity\":\"warning\"", "mask_with": "MESSAGE_ADS_RETRIEVAL_FAILED_SEVERITY_WARNING"},
          
          # 错误前缀区分 (高优先级)
          {"regex_pattern":"\"error\":\"could not retrieve cart:", "mask_with": "ERROR_PREFIX_CART_RETRIEVE"},
          {"regex_pattern":"\"error\":\"failed to add to cart:", "mask_with": "ERROR_PREFIX_CART_ADD"},
          {"regex_pattern":"\"error\":\"could not retrieve product:", "mask_with": "ERROR_PREFIX_PRODUCT_RETRIEVE"},
          {"regex_pattern":"\"error\":\"failed to get shipping quote:", "mask_with": "ERROR_PREFIX_SHIPPING_QUOTE"},
          {"regex_pattern":"\"error\":\"failed to get product recommendations:", "mask_with": "ERROR_PREFIX_RECOMMENDATION"},
          {"regex_pattern":"\"error\":\"failed to get ads:", "mask_with": "ERROR_PREFIX_ADS_GET"},
          {"regex_pattern":"\"error\":\"failed to retrieve ads:", "mask_with": "ERROR_PREFIX_ADS_RETRIEVE"},
          {"regex_pattern":"\"error\":\"failed to complete the order:", "mask_with": "ERROR_PREFIX_ORDER_COMPLETE"},
          {"regex_pattern":"\"error\":\"failed to prepare order:", "mask_with": "ERROR_PREFIX_ORDER_PREPARE"},
          {"regex_pattern":"\"error\":\"failed to send order confirmation:", "mask_with": "ERROR_PREFIX_ORDER_CONFIRMATION"},
          {"regex_pattern":"\"error\":\"cart failure:", "mask_with": "ERROR_PREFIX_CART_FAILURE"},
          {"regex_pattern":"\"error\":\"shipping quote failure:", "mask_with": "ERROR_PREFIX_SHIPPING_FAILURE"},
          {"regex_pattern":"\"error\":\"failed to charge card:", "mask_with": "ERROR_PREFIX_PAYMENT_FAILURE"},
          {"regex_pattern":"\"error\":\"shipment failed:", "mask_with": "ERROR_PREFIX_SHIPMENT_FAILURE"},
          
          # HTTP请求方法和路径组合模式 (中优先级)
          {"regex_pattern":"\"http.req.method\":\"POST\",\"http.req.path\":\"/cart\"", "mask_with": "HTTP_POST_CART"},
          {"regex_pattern":"\"http.req.method\":\"GET\",\"http.req.path\":\"/cart\"", "mask_with": "HTTP_GET_CART"},
          {"regex_pattern":"\"http.req.method\":\"GET\",\"http.req.path\":\"/\"", "mask_with": "HTTP_GET_ROOT"},
          {"regex_pattern":"\"http.req.method\":\"GET\",\"http.req.path\":\"/product/[A-Z0-9]+\"", "mask_with": "HTTP_GET_PRODUCT_DETAIL"},
          {"regex_pattern":"\"http.req.method\":\"POST\",\"http.req.path\":\"/cart/checkout\"", "mask_with": "HTTP_POST_CHECKOUT"},
          
          # 错误上下文关联 (中优先级)
          {"regex_pattern":"failed to get ads:", "mask_with": "CONTEXT_ADS_FAILURE"},
          {"regex_pattern":"failed to retrieve ads:", "mask_with": "CONTEXT_ADS_RETRIEVE_FAILURE"},
          {"regex_pattern":"failed to get product recommendations:", "mask_with": "CONTEXT_RECOMMENDATION_FAILURE"},
          {"regex_pattern":"failed to get recommended product info:", "mask_with": "CONTEXT_RECOMMENDATION_INFO_FAILURE"},
          {"regex_pattern":"failed to complete the order:", "mask_with": "CONTEXT_ORDER_FAILURE"},
          {"regex_pattern":"failed to add to cart:", "mask_with": "CONTEXT_CART_ADD_FAILURE"},
          {"regex_pattern":"could not retrieve cart:", "mask_with": "CONTEXT_CART_RETRIEVE_FAILURE"},
          {"regex_pattern":"shipping quote failure:", "mask_with": "CONTEXT_SHIPPING_FAILURE"},
          {"regex_pattern":"failed to get shipping quote:", "mask_with": "CONTEXT_SHIPPING_QUOTE_FAILURE"},
          {"regex_pattern":"cart failure:", "mask_with": "CONTEXT_CART_FAILURE"},
          {"regex_pattern":"failed to send order confirmation:", "mask_with": "CONTEXT_EMAIL_FAILURE"},
          {"regex_pattern":"failed to prepare order:", "mask_with": "CONTEXT_ORDER_PREPARATION_FAILURE"},
          {"regex_pattern":"could not retrieve product:", "mask_with": "CONTEXT_PRODUCT_RETRIEVE_FAILURE"},
          {"regex_pattern":"failed to charge card:", "mask_with": "CONTEXT_PAYMENT_FAILURE"},
          {"regex_pattern":"shipment failed:", "mask_with": "CONTEXT_SHIPMENT_FAILURE"},
          
          # 细分错误代码类型 (中优先级)
          {"regex_pattern":"code = Unavailable desc = connection error: desc = \\\"transport: Error while dialing dial tcp [^:]+:\\d+: connect: connection refused\\\"", "mask_with": "ERROR_UNAVAILABLE_CONNECTION_REFUSED_DETAILED"},
          {"regex_pattern":"code = Unavailable desc = connection error: desc = \\\"transport: Error while dialing dial tcp [^:]+:\\d+: i/o timeout\\\"", "mask_with": "ERROR_UNAVAILABLE_TIMEOUT_DETAILED"},
          {"regex_pattern":"code = Unavailable desc = connection error", "mask_with": "ERROR_UNAVAILABLE_CONNECTION"},
          {"regex_pattern":"code = Unavailable desc = transport is closing", "mask_with": "ERROR_UNAVAILABLE_TRANSPORT_CLOSING"},
          {"regex_pattern":"code = Unavailable desc = timed out", "mask_with": "ERROR_UNAVAILABLE_TIMEOUT"},
          {"regex_pattern":"code = Unavailable", "mask_with": "ERROR_UNAVAILABLE"},
          {"regex_pattern":"code = FailedPrecondition desc = Can't access cart storage", "mask_with": "ERROR_FAILED_PRECONDITION_CART_STORAGE"},
          {"regex_pattern":"code = FailedPrecondition", "mask_with": "ERROR_FAILED_PRECONDITION"},
          {"regex_pattern":"code = Internal desc = shipping quote failure", "mask_with": "ERROR_INTERNAL_SHIPPING"},
          {"regex_pattern":"code = Internal desc = failed to charge card", "mask_with": "ERROR_INTERNAL_PAYMENT"},
          {"regex_pattern":"code = Internal desc = failed to prepare order", "mask_with": "ERROR_INTERNAL_ORDER_PREP"},
          {"regex_pattern":"code = Internal", "mask_with": "ERROR_INTERNAL"},
          {"regex_pattern":"code = DeadlineExceeded desc = context deadline exceeded", "mask_with": "ERROR_DEADLINE_EXCEEDED"},
          {"regex_pattern":"code = DeadlineExceeded", "mask_with": "ERROR_TIMEOUT"},
          {"regex_pattern":"code = Canceled desc = context canceled", "mask_with": "ERROR_CANCELED_CONTEXT"},
          {"regex_pattern":"code = Canceled", "mask_with": "ERROR_CANCELED"},
          {"regex_pattern":"code = Unknown desc = Exception calling application", "mask_with": "ERROR_UNKNOWN_EXCEPTION"},
          {"regex_pattern":"code = Unknown desc = ", "mask_with": "ERROR_UNKNOWN_EMPTY"},
          {"regex_pattern":"code = Unknown", "mask_with": "ERROR_UNKNOWN"},
          
          # 异常类型区分 (低优先级)
          {"regex_pattern":"connection error: desc = \"transport: Error while dialing dial tcp [^:]+:\\d+: connect: connection refused\"", "mask_with": "EXCEPTION_CONNECTION_REFUSED_DETAILED"},
          {"regex_pattern":"connection error: desc = \"transport: Error while dialing dial tcp [^:]+:\\d+: i/o timeout\"", "mask_with": "EXCEPTION_TIMEOUT_DETAILED"},
          {"regex_pattern":"connection refused", "mask_with": "EXCEPTION_CONNECTION_REFUSED"},
          {"regex_pattern":"i/o timeout", "mask_with": "EXCEPTION_TIMEOUT"},
          {"regex_pattern":"timed out waiting for server handshake", "mask_with": "EXCEPTION_HANDSHAKE_TIMEOUT"},
          {"regex_pattern":"timed out waiting", "mask_with": "EXCEPTION_TIMEOUT"},
          {"regex_pattern":"context canceled", "mask_with": "EXCEPTION_CANCELED"},
          {"regex_pattern":"transport is closing", "mask_with": "EXCEPTION_TRANSPORT_CLOSING"},
          {"regex_pattern":"Connection reset by peer", "mask_with": "EXCEPTION_CONNECTION_RESET"},
          {"regex_pattern":"RedisTimeoutException", "mask_with": "EXCEPTION_REDIS_TIMEOUT"},
          {"regex_pattern":"RedisConnectionException", "mask_with": "EXCEPTION_REDIS_CONNECTION"},
          {"regex_pattern":"SocketFailure", "mask_with": "EXCEPTION_SOCKET_FAILURE"},
          
          # 服务名称和端点 (低优先级)
          {"regex_pattern":"cartservice[\\w.-]*", "mask_with": "CART_SERVICE"},
          {"regex_pattern":"redis-cart:\\d+", "mask_with": "REDIS_ENDPOINT"},
          {"regex_pattern":"10\\.233\\.\\d+\\.\\d+:\\d+", "mask_with": "INTERNAL_IP_PORT"},
          
          # HTTP请求信息 (低优先级)
          {"regex_pattern":"\"/cart/checkout\"", "mask_with": "PATH_CHECKOUT"},
          {"regex_pattern":"\"/cart\"", "mask_with": "PATH_CART"},
          {"regex_pattern":"\"/product/[A-Z0-9]+\"", "mask_with": "PATH_PRODUCT_DETAIL"},
          {"regex_pattern":"\"/\"", "mask_with": "PATH_ROOT"},
          {"regex_pattern":"\"/[\\w/]+\"", "mask_with": "PATH_OTHER"},
          {"regex_pattern":"\"GET\"", "mask_with": "METHOD_GET"},
          {"regex_pattern":"\"POST\"", "mask_with": "METHOD_POST"},
          
          # 堆栈跟踪组件 (低优先级)
          {"regex_pattern":"at cartservice\\.cartstore\\.RedisCartStore\\.[\\w]+\\([^)]*\\) in", "mask_with": "CART_STACK_TRACE"},
          {"regex_pattern":"at StackExchange\\.Redis\\.[\\w.]+\\([^)]*\\) in", "mask_with": "REDIS_STACK_TRACE"},
          {"regex_pattern":"at System\\.IO\\.Pipelines\\.[\\w.]+\\([^)]*\\)", "mask_with": "IO_STACK_TRACE"},
          {"regex_pattern":"at [\\w.]+\\.[\\w.]+\\([^)]*\\) in", "mask_with": "STACK_TRACE"},
          
          # 文件路径和行号 (低优先级)
          {"regex_pattern":"/[\\w/]+\\.cs:line \\d+", "mask_with": "CS_FILE_LINE"},
          
          # 产品和服务标识符 (低优先级)
          {"regex_pattern":"#[A-Z0-9]{10}", "mask_with": "PRODUCT_ID"},
          {"regex_pattern":"[A-Z0-9]{10}", "mask_with": "PRODUCT_CODE"},
          
          # 消息类型区分 (低优先级)
          {"regex_pattern":"\"message\":\"request error\"", "mask_with": "MESSAGE_REQUEST_ERROR"},
          {"regex_pattern":"\"message\":\"failed to retrieve ads\"", "mask_with": "MESSAGE_ADS_RETRIEVAL_FAILED"},
          {"regex_pattern":"\"severity\":\"error\"", "mask_with": "SEVERITY_ERROR"},
          {"regex_pattern":"\"severity\":\"warning\"", "mask_with": "SEVERITY_WARNING"},
          
          # 基础通用规则 (最低优先级)
          {"regex_pattern":"\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d+Z", "mask_with": "ISO_TIMESTAMP"},
          {"regex_pattern":"http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:[0-9a-fA-F][0-9a-fA-F]))+", "mask_with": "URL"},
          {"regex_pattern":"\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}", "mask_with": "HOST"},
          {"regex_pattern":"\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}", "mask_with": "UID"}
          ]
mask_prefix = <:
mask_suffix = :>

[DRAIN]
sim_th = 0.01
depth = 10
max_children = 100
max_clusters = 4096
extra_delimiters = ["_", "|", ":", "=", ",", " "]

[PROFILING]
enabled = True
report_sec = 30